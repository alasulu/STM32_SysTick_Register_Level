
SysTick_LED.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000150  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001a0  08000150  08000150  00001150  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002f0  080002f8  000012f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002f0  080002f0  000012f8  2**0
                  CONTENTS
  4 .ARM          00000000  080002f0  080002f0  000012f8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080002f0  080002f8  000012f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002f0  080002f0  000012f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080002f4  080002f4  000012f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000012f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080002f8  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080002f8  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000012f8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000315  00000000  00000000  00001321  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000001b4  00000000  00000000  00001636  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000068  00000000  00000000  000017f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000003f  00000000  00000000  00001858  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00018e18  00000000  00000000  00001897  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000c9d  00000000  00000000  0001a6af  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008415b  00000000  00000000  0001b34c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0009f4a7  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000090  00000000  00000000  0009f4ec  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000077  00000000  00000000  0009f57c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000150 <__do_global_dtors_aux>:
 8000150:	b510      	push	{r4, lr}
 8000152:	4c05      	ldr	r4, [pc, #20]	@ (8000168 <__do_global_dtors_aux+0x18>)
 8000154:	7823      	ldrb	r3, [r4, #0]
 8000156:	b933      	cbnz	r3, 8000166 <__do_global_dtors_aux+0x16>
 8000158:	4b04      	ldr	r3, [pc, #16]	@ (800016c <__do_global_dtors_aux+0x1c>)
 800015a:	b113      	cbz	r3, 8000162 <__do_global_dtors_aux+0x12>
 800015c:	4804      	ldr	r0, [pc, #16]	@ (8000170 <__do_global_dtors_aux+0x20>)
 800015e:	f3af 8000 	nop.w
 8000162:	2301      	movs	r3, #1
 8000164:	7023      	strb	r3, [r4, #0]
 8000166:	bd10      	pop	{r4, pc}
 8000168:	20000000 	.word	0x20000000
 800016c:	00000000 	.word	0x00000000
 8000170:	080002d8 	.word	0x080002d8

08000174 <frame_dummy>:
 8000174:	b508      	push	{r3, lr}
 8000176:	4b03      	ldr	r3, [pc, #12]	@ (8000184 <frame_dummy+0x10>)
 8000178:	b11b      	cbz	r3, 8000182 <frame_dummy+0xe>
 800017a:	4903      	ldr	r1, [pc, #12]	@ (8000188 <frame_dummy+0x14>)
 800017c:	4803      	ldr	r0, [pc, #12]	@ (800018c <frame_dummy+0x18>)
 800017e:	f3af 8000 	nop.w
 8000182:	bd08      	pop	{r3, pc}
 8000184:	00000000 	.word	0x00000000
 8000188:	20000004 	.word	0x20000004
 800018c:	080002d8 	.word	0x080002d8

08000190 <main>:
#define PIN5		(1U<<5)
#define LED			 PIN5


int main(void)
{
 8000190:	b580      	push	{r7, lr}
 8000192:	af00      	add	r7, sp, #0

	//Enable clock acces for GPIOA
	RCC->APB2ENR |= GPIOAEN;
 8000194:	4b11      	ldr	r3, [pc, #68]	@ (80001dc <main+0x4c>)
 8000196:	699b      	ldr	r3, [r3, #24]
 8000198:	4a10      	ldr	r2, [pc, #64]	@ (80001dc <main+0x4c>)
 800019a:	f043 0304 	orr.w	r3, r3, #4
 800019e:	6193      	str	r3, [r2, #24]

	//Set PA5 as output pin
	GPIOA->CRL &= ~(0xF<<20);
 80001a0:	4b0f      	ldr	r3, [pc, #60]	@ (80001e0 <main+0x50>)
 80001a2:	681b      	ldr	r3, [r3, #0]
 80001a4:	4a0e      	ldr	r2, [pc, #56]	@ (80001e0 <main+0x50>)
 80001a6:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 80001aa:	6013      	str	r3, [r2, #0]
	GPIOA->CRL |= (0x1<<20);
 80001ac:	4b0c      	ldr	r3, [pc, #48]	@ (80001e0 <main+0x50>)
 80001ae:	681b      	ldr	r3, [r3, #0]
 80001b0:	4a0b      	ldr	r2, [pc, #44]	@ (80001e0 <main+0x50>)
 80001b2:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80001b6:	6013      	str	r3, [r2, #0]

	while(1)
	{
		GPIOA->BSRR = LED;       // Set PA5 high
 80001b8:	4b09      	ldr	r3, [pc, #36]	@ (80001e0 <main+0x50>)
 80001ba:	2220      	movs	r2, #32
 80001bc:	611a      	str	r2, [r3, #16]
		systickDelayMs(1000);    // Delay for 1 second
 80001be:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80001c2:	f000 f80f 	bl	80001e4 <systickDelayMs>
		GPIOA->BSRR = (1U << 21); // Set PA5 low
 80001c6:	4b06      	ldr	r3, [pc, #24]	@ (80001e0 <main+0x50>)
 80001c8:	f44f 1200 	mov.w	r2, #2097152	@ 0x200000
 80001cc:	611a      	str	r2, [r3, #16]
		systickDelayMs(1000);    // Delay for 1 second
 80001ce:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80001d2:	f000 f807 	bl	80001e4 <systickDelayMs>
		GPIOA->BSRR = LED;       // Set PA5 high
 80001d6:	bf00      	nop
 80001d8:	e7ee      	b.n	80001b8 <main+0x28>
 80001da:	bf00      	nop
 80001dc:	40021000 	.word	0x40021000
 80001e0:	40010800 	.word	0x40010800

080001e4 <systickDelayMs>:
#define STCSR_COUNTFLAG			(1U<<16)


void systickDelayMs(int delay) // We create a function that's not going to somewhere else but if only if
// turning back an integer n value
{
 80001e4:	b480      	push	{r7}
 80001e6:	b085      	sub	sp, #20
 80001e8:	af00      	add	r7, sp, #0
 80001ea:	6078      	str	r0, [r7, #4]
	//--Configure the Systick--//

	//Reloads with number of clock per millisecond//
	SysTick->LOAD = SYSTICK_LOAD_VAL;
 80001ec:	4b12      	ldr	r3, [pc, #72]	@ (8000238 <systickDelayMs+0x54>)
 80001ee:	f242 3228 	movw	r2, #9000	@ 0x2328
 80001f2:	605a      	str	r2, [r3, #4]

	//Clear Systick Current Value Register//
	//Enable Systick and select internal clock source//
	SysTick->VAL = 0;
 80001f4:	4b10      	ldr	r3, [pc, #64]	@ (8000238 <systickDelayMs+0x54>)
 80001f6:	2200      	movs	r2, #0
 80001f8:	609a      	str	r2, [r3, #8]
	SysTick->CTRL |= STCSR_CFG;
 80001fa:	4b0f      	ldr	r3, [pc, #60]	@ (8000238 <systickDelayMs+0x54>)
 80001fc:	681b      	ldr	r3, [r3, #0]
 80001fe:	4a0e      	ldr	r2, [pc, #56]	@ (8000238 <systickDelayMs+0x54>)
 8000200:	f043 0305 	orr.w	r3, r3, #5
 8000204:	6013      	str	r3, [r2, #0]

	for (int i=0;i<delay;i++)
 8000206:	2300      	movs	r3, #0
 8000208:	60fb      	str	r3, [r7, #12]
 800020a:	e009      	b.n	8000220 <systickDelayMs+0x3c>
	{
		        // Wait until count flag is set
		        while ((SysTick->CTRL & STCSR_COUNTFLAG) == 0);
 800020c:	bf00      	nop
 800020e:	4b0a      	ldr	r3, [pc, #40]	@ (8000238 <systickDelayMs+0x54>)
 8000210:	681b      	ldr	r3, [r3, #0]
 8000212:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8000216:	2b00      	cmp	r3, #0
 8000218:	d0f9      	beq.n	800020e <systickDelayMs+0x2a>
	for (int i=0;i<delay;i++)
 800021a:	68fb      	ldr	r3, [r7, #12]
 800021c:	3301      	adds	r3, #1
 800021e:	60fb      	str	r3, [r7, #12]
 8000220:	68fa      	ldr	r2, [r7, #12]
 8000222:	687b      	ldr	r3, [r7, #4]
 8000224:	429a      	cmp	r2, r3
 8000226:	dbf1      	blt.n	800020c <systickDelayMs+0x28>
		    }

	SysTick->CTRL = 0;
 8000228:	4b03      	ldr	r3, [pc, #12]	@ (8000238 <systickDelayMs+0x54>)
 800022a:	2200      	movs	r2, #0
 800022c:	601a      	str	r2, [r3, #0]
}
 800022e:	bf00      	nop
 8000230:	3714      	adds	r7, #20
 8000232:	46bd      	mov	sp, r7
 8000234:	bc80      	pop	{r7}
 8000236:	4770      	bx	lr
 8000238:	e000e010 	.word	0xe000e010

0800023c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800023c:	480d      	ldr	r0, [pc, #52]	@ (8000274 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800023e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000240:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000244:	480c      	ldr	r0, [pc, #48]	@ (8000278 <LoopForever+0x6>)
  ldr r1, =_edata
 8000246:	490d      	ldr	r1, [pc, #52]	@ (800027c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000248:	4a0d      	ldr	r2, [pc, #52]	@ (8000280 <LoopForever+0xe>)
  movs r3, #0
 800024a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800024c:	e002      	b.n	8000254 <LoopCopyDataInit>

0800024e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800024e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000250:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000252:	3304      	adds	r3, #4

08000254 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000254:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000256:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000258:	d3f9      	bcc.n	800024e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800025a:	4a0a      	ldr	r2, [pc, #40]	@ (8000284 <LoopForever+0x12>)
  ldr r4, =_ebss
 800025c:	4c0a      	ldr	r4, [pc, #40]	@ (8000288 <LoopForever+0x16>)
  movs r3, #0
 800025e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000260:	e001      	b.n	8000266 <LoopFillZerobss>

08000262 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000262:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000264:	3204      	adds	r2, #4

08000266 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000266:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000268:	d3fb      	bcc.n	8000262 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800026a:	f000 f811 	bl	8000290 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800026e:	f7ff ff8f 	bl	8000190 <main>

08000272 <LoopForever>:

LoopForever:
  b LoopForever
 8000272:	e7fe      	b.n	8000272 <LoopForever>
  ldr   r0, =_estack
 8000274:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 8000278:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800027c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000280:	080002f8 	.word	0x080002f8
  ldr r2, =_sbss
 8000284:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000288:	2000001c 	.word	0x2000001c

0800028c <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800028c:	e7fe      	b.n	800028c <ADC1_2_IRQHandler>
	...

08000290 <__libc_init_array>:
 8000290:	b570      	push	{r4, r5, r6, lr}
 8000292:	2600      	movs	r6, #0
 8000294:	4d0c      	ldr	r5, [pc, #48]	@ (80002c8 <__libc_init_array+0x38>)
 8000296:	4c0d      	ldr	r4, [pc, #52]	@ (80002cc <__libc_init_array+0x3c>)
 8000298:	1b64      	subs	r4, r4, r5
 800029a:	10a4      	asrs	r4, r4, #2
 800029c:	42a6      	cmp	r6, r4
 800029e:	d109      	bne.n	80002b4 <__libc_init_array+0x24>
 80002a0:	f000 f81a 	bl	80002d8 <_init>
 80002a4:	2600      	movs	r6, #0
 80002a6:	4d0a      	ldr	r5, [pc, #40]	@ (80002d0 <__libc_init_array+0x40>)
 80002a8:	4c0a      	ldr	r4, [pc, #40]	@ (80002d4 <__libc_init_array+0x44>)
 80002aa:	1b64      	subs	r4, r4, r5
 80002ac:	10a4      	asrs	r4, r4, #2
 80002ae:	42a6      	cmp	r6, r4
 80002b0:	d105      	bne.n	80002be <__libc_init_array+0x2e>
 80002b2:	bd70      	pop	{r4, r5, r6, pc}
 80002b4:	f855 3b04 	ldr.w	r3, [r5], #4
 80002b8:	4798      	blx	r3
 80002ba:	3601      	adds	r6, #1
 80002bc:	e7ee      	b.n	800029c <__libc_init_array+0xc>
 80002be:	f855 3b04 	ldr.w	r3, [r5], #4
 80002c2:	4798      	blx	r3
 80002c4:	3601      	adds	r6, #1
 80002c6:	e7f2      	b.n	80002ae <__libc_init_array+0x1e>
 80002c8:	080002f0 	.word	0x080002f0
 80002cc:	080002f0 	.word	0x080002f0
 80002d0:	080002f0 	.word	0x080002f0
 80002d4:	080002f4 	.word	0x080002f4

080002d8 <_init>:
 80002d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002da:	bf00      	nop
 80002dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002de:	bc08      	pop	{r3}
 80002e0:	469e      	mov	lr, r3
 80002e2:	4770      	bx	lr

080002e4 <_fini>:
 80002e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002e6:	bf00      	nop
 80002e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002ea:	bc08      	pop	{r3}
 80002ec:	469e      	mov	lr, r3
 80002ee:	4770      	bx	lr
